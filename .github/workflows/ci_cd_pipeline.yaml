name: CI_CD Pipeline
on:
  workflow_dispatch:
    inputs:
      env:
        description: Environment
        required: true
        type: choice
        options:
          - prod
          - stage
          - dev
          - uat

jobs:
  Build:
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: GCP authenticate
        uses: google-github-actions/auth@v3
        with:
          project_id: '${{secrets.PROJECT_ID}}'
          workload_identity_provider: '${{secrets.CI_CD_WORKLOAD_IDENTITY_PROVIDER}}'
          service_account: ${{secrets.CI_CD_SA}}

      - name: Configure docker for Artifact Registry
        run: |
          gcloud --quiet auth configure-docker me-central1-docker.pkg.dev

      - name: build image
        run: |
          cd ./app
          IMAGE="me-central1-docker.pkg.dev/${{ secrets.PROJECT_ID }}/simple-web-app/simple_app:${{ github.sha }}"
          docker build -t $IMAGE .

      - name: Push image
        run: |
          IMAGE="me-central1-docker.pkg.dev/${{ secrets.PROJECT_ID }}/simple-web-app/simple_app:${{ github.sha }}"
          docker push $IMAGE

  Test:
    name: Test (smoke)
    runs-on: ubuntu-latest
    needs: Build

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: GCP authenticate
        uses: google-github-actions/auth@v3
        with:
          project_id: '${{secrets.PROJECT_ID}}'
          workload_identity_provider: '${{secrets.CI_CD_WORKLOAD_IDENTITY_PROVIDER}}'
          service_account: ${{secrets.CI_CD_SA}}

      - name: Configure docker for Artifact Registry
        run: |
          gcloud --quiet auth configure-docker me-central1-docker.pkg.dev

      - name: Pull image
        run: |
          IMAGE="me-central1-docker.pkg.dev/${{ secrets.PROJECT_ID }}/simple-web-app/simple_app:${{ github.sha }}"
          docker pull $IMAGE

      - name: Run container (smoke test)
        run: |
          IMAGE="me-central1-docker.pkg.dev/${{ secrets.PROJECT_ID }}/simple-web-app/simple_app:${{ github.sha }}"
          docker run --rm -d \
            --name smoke_test \
            -e ASSETS_BUCKET=dummy-bucket \
            -p 8080:8080 $IMAGE

          docker ps -a

          for i in {1..12}; do
            echo "waiting for app to respond... attempt $i"
            STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8080/health || true)
            if [ "$STATUS" = "200" ]; then
              echo "app responded with 200 OK"
              break
            fi
            sleep 5
          done

          STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8080/health || true)
          if [ "$STATUS" != "200" ]; then
            echo "Smoke test failed â€” final HTTP status: $STATUS"
            docker logs smoke_test || true
            docker stop smoke_test || true
            exit 1
          fi

          docker stop smoke_test || true

      - name: Cleanup (always)
        if: always()
        run: |
          docker rm -f smoke_test || true

  Security_Scan:
    name: Security Scan (Trivy)
    runs-on: ubuntu-latest
    needs: Test

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: GCP authenticate
        uses: google-github-actions/auth@v3
        with:
          project_id: '${{secrets.PROJECT_ID}}'
          workload_identity_provider: '${{secrets.CI_CD_WORKLOAD_IDENTITY_PROVIDER}}'
          service_account: ${{secrets.CI_CD_SA}}

      - name: Configure docker for Artifact Registry
        run: |
          gcloud --quiet auth configure-docker me-central1-docker.pkg.dev

      - name: Run Trivy image scan (fail on HIGH/CRITICAL)
        uses: aquasecurity/trivy-action@v0.6.1
        with:
          image-ref: me-central1-docker.pkg.dev/${{ secrets.PROJECT_ID }}/simple-web-app/simple_app:${{ github.sha }}
          format: 'table'
          exit-code: '1'
          severity: 'CRITICAL,HIGH'

  Deploy:
    runs-on: ubuntu-latest
    needs: Security_Scan

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: GCP authenticate
        uses: google-github-actions/auth@v3
        with:
          project_id: '${{secrets.PROJECT_ID}}'
          workload_identity_provider: '${{secrets.CI_CD_WORKLOAD_IDENTITY_PROVIDER}}'
          service_account: ${{secrets.CI_CD_SA}}

      - name: Deploy new image to Cloud Run
        run: |
          IMAGE="me-central1-docker.pkg.dev/${{ secrets.PROJECT_ID }}/simple-web-app/simple_app:${{ github.sha }}"
          gcloud run services update ${{inputs.env}}-simple-web-app \
            --image=$IMAGE \
            --region="me-central1" \
            --project=${{ secrets.PROJECT_ID }}
